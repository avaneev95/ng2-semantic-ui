{"version":3,"file":"positioning.service.js","sourceRoot":"","sources":["../../../../src/misc/util/services/positioning.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { ElementRef } from \"@angular/core\";\r\nimport Popper from \"popper.js\";\r\n\r\ntype PopperModifiers = Popper.Modifiers & {\r\n    computeStyle?:{\r\n        gpuAcceleration:boolean;\r\n    };\r\n};\r\ntype PopperInstance = Popper & {\r\n    options:Popper.PopperOptions & {\r\n        modifiers:PopperModifiers;\r\n    };\r\n};\r\n\r\nexport type PositioningPlacement = \"auto\" |\r\n                                   \"top left\" | \"top\" | \"top right\" |\r\n                                   \"bottom left\" | \"bottom\" | \"bottom right\" |\r\n                                   \"left top\" | \"left\" | \"left bottom\" |\r\n                                   \"right top\" | \"right\" | \"right bottom\";\r\n\r\nexport const PositioningPlacement = {\r\n    Auto: \"auto\" as PositioningPlacement,\r\n    TopLeft: \"top left\" as PositioningPlacement,\r\n    Top: \"top\" as PositioningPlacement,\r\n    TopRight: \"top right\" as PositioningPlacement,\r\n    LeftTop: \"left top\" as PositioningPlacement,\r\n    Left: \"left\" as PositioningPlacement,\r\n    LeftBottom: \"left bottom\" as PositioningPlacement,\r\n    BottomLeft: \"bottom left\" as PositioningPlacement,\r\n    Bottom: \"bottom\" as PositioningPlacement,\r\n    BottomRight: \"bottom right\" as PositioningPlacement,\r\n    RightTop: \"right top\" as PositioningPlacement,\r\n    Right: \"right\" as PositioningPlacement,\r\n    RightBottom: \"right bottom\" as PositioningPlacement\r\n};\r\n\r\nexport interface IPositionBoundingBox {\r\n    width:number;\r\n    height:number;\r\n    top:number;\r\n    left:number;\r\n    bottom:number;\r\n    right:number;\r\n}\r\n\r\nfunction placementToPopper(placement:PositioningPlacement):Popper.Placement {\r\n    if (!placement || placement === PositioningPlacement.Auto) {\r\n        return \"auto\";\r\n    }\r\n\r\n    // All placements of the format: `direction alignment`, e.g. `top left`.\r\n    const [direction, alignment] = placement.split(\" \");\r\n\r\n    // Direction alone covers case of just `top`, `left`, `bottom`, `right`.\r\n    const chosenPlacement = [direction];\r\n\r\n    // Add `start` / `end` to placement, depending on alignment direction.\r\n    switch (alignment) {\r\n        case \"top\":\r\n        case \"left\":\r\n            chosenPlacement.push(\"start\");\r\n            break;\r\n        case \"bottom\":\r\n        case \"right\":\r\n            chosenPlacement.push(\"end\");\r\n            break;\r\n    }\r\n\r\n    // Join with hyphen to create Popper compatible placement.\r\n    return chosenPlacement.join(\"-\") as Popper.Placement;\r\n}\r\n\r\nfunction popperToPlacement(popper:string):PositioningPlacement {\r\n    if (!popper || popper === \"auto\") {\r\n        return \"auto\";\r\n    }\r\n\r\n    const [direction, alignment] = popper.split(\"-\");\r\n\r\n    const chosenPlacement = [direction];\r\n\r\n    switch (direction) {\r\n        case \"top\":\r\n        case \"bottom\":\r\n            switch (alignment) {\r\n                case \"start\":\r\n                    chosenPlacement.push(\"left\");\r\n                    break;\r\n                case \"end\":\r\n                    chosenPlacement.push(\"right\");\r\n                    break;\r\n            }\r\n            break;\r\n        case \"left\":\r\n        case \"right\":\r\n            switch (alignment) {\r\n                case \"start\":\r\n                    chosenPlacement.push(\"top\");\r\n                    break;\r\n                case \"end\":\r\n                    chosenPlacement.push(\"bottom\");\r\n                    break;\r\n            }\r\n            break;\r\n    }\r\n\r\n    return chosenPlacement.join(\" \") as PositioningPlacement;\r\n}\r\n\r\nexport class PositioningService {\r\n    public readonly anchor:ElementRef;\r\n    public readonly subject:ElementRef;\r\n\r\n    private _popper:PopperInstance;\r\n    private _popperState:Popper.Data;\r\n    private _placement:PositioningPlacement;\r\n    private _hasArrow:boolean;\r\n    private _arrowSelector:string | undefined;\r\n\r\n    public get placement():PositioningPlacement {\r\n        return this._placement;\r\n    }\r\n\r\n    public set placement(placement:PositioningPlacement) {\r\n        this._placement = placement;\r\n        if (this._popper) {\r\n            this._popper.options.placement = placementToPopper(placement);\r\n        }\r\n    }\r\n\r\n    public set hasArrow(hasArrow:boolean) {\r\n        this._hasArrow = hasArrow;\r\n    }\r\n\r\n    public get actualPlacement():PositioningPlacement {\r\n        if (!this._popperState) {\r\n            return PositioningPlacement.Auto;\r\n        }\r\n\r\n        return popperToPlacement(this._popperState.placement);\r\n    }\r\n\r\n    public get state():Popper.Data {\r\n        return this._popperState;\r\n    }\r\n\r\n    constructor(anchor:ElementRef, subject:ElementRef, placement:PositioningPlacement, arrowSelector?:string) {\r\n        this.anchor = anchor;\r\n        this.subject = subject;\r\n        this._placement = placement;\r\n        this._arrowSelector = arrowSelector;\r\n        this.init();\r\n    }\r\n\r\n    public init():void {\r\n        const modifiers:PopperModifiers = {\r\n            computeStyle: {\r\n                gpuAcceleration: false\r\n            },\r\n            preventOverflow: {\r\n                escapeWithReference: true,\r\n                boundariesElement: document.body\r\n            },\r\n            arrow: {\r\n                element: this._arrowSelector\r\n            },\r\n            offset: {\r\n                fn: (data:Popper.Data) => {\r\n                    if (this._hasArrow) {\r\n                        const offsets = this.calculateOffsets();\r\n                        data.offsets.popper.left += offsets.left;\r\n                        data.offsets.popper.top += offsets.top;\r\n                    }\r\n                    return data;\r\n                }\r\n            }\r\n        };\r\n\r\n        if (!this._arrowSelector) {\r\n            delete modifiers.arrow;\r\n        }\r\n\r\n        this._popper = new Popper(\r\n            this.anchor.nativeElement,\r\n            this.subject.nativeElement,\r\n            {\r\n                placement: placementToPopper(this._placement),\r\n                modifiers,\r\n                onCreate: initial => this._popperState = initial,\r\n                onUpdate: update => this._popperState = update\r\n            }) as PopperInstance;\r\n    }\r\n\r\n    public update():void {\r\n        this._popper.update();\r\n    }\r\n\r\n    public destroy():void {\r\n        this._popper.destroy();\r\n    }\r\n\r\n    private calculateOffsets():Popper.Offset {\r\n        let left = 0; let top = 0;\r\n\r\n        // To support correct positioning for all popup sizes we should calculate offset using em\r\n        const fontSize = parseFloat(window.getComputedStyle(this.subject.nativeElement).getPropertyValue(\"font-size\"));\r\n        // The Semantic UI popup arrow width and height are 0.71428571em and the margin from the popup edge is 1em\r\n        const arrowCenter = (0.71428571 / 2 + 1) * fontSize;\r\n\r\n        if (this.anchor.nativeElement.offsetWidth <= arrowCenter * 2) {\r\n            const anchorCenterWidth = this.anchor.nativeElement.offsetWidth / 2;\r\n            if (this._placement === PositioningPlacement.TopLeft || this._placement === PositioningPlacement.BottomLeft) {\r\n                left = anchorCenterWidth - arrowCenter;\r\n            }\r\n            if (this._placement === PositioningPlacement.TopRight || this._placement === PositioningPlacement.BottomRight) {\r\n                left = arrowCenter - anchorCenterWidth;\r\n            }\r\n        }\r\n\r\n        if (this.anchor.nativeElement.offsetHeight <= arrowCenter * 2) {\r\n            const anchorCenterHeight = this.anchor.nativeElement.offsetHeight / 2;\r\n            if (this._placement === PositioningPlacement.LeftTop || this._placement === PositioningPlacement.RightTop) {\r\n                top = anchorCenterHeight - arrowCenter;\r\n            }\r\n            if (this._placement === PositioningPlacement.LeftBottom || this._placement === PositioningPlacement.RightBottom) {\r\n                top = arrowCenter - anchorCenterHeight;\r\n            }\r\n        }\r\n        return { top, left, width: 0, height: 0 };\r\n    }\r\n\r\n}\r\n"]}